<?xml version="1.0" encoding="UTF-8"?>
<!--
// 
// Copyright (c) 2020 Filip Fodemski
// 
// Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files
// (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge,
// publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so,
// subject to the following conditions:
// 
// The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR
// ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH
// THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE
//
-->
<e:engine name="TicketTester"
    xmlns=""
    xmlns:e="urn:smartgraph"
    xmlns:n="urn:smartgraph:nodes"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="urn:smartgraph ../../SmartGraph/Xml/EngineXml.xsd">

  <e:node name="ShortTicker">
    <e:obj type="SmartGraph.Nodes.Core.Ticker, SmartGraph.Nodes">
      <n:Ticker random="true" minValue="90.0" maxValue="110.0"/>
    </e:obj>
  </e:node>
  <e:node name="LongTicker">
    <e:obj type="SmartGraph.Nodes.Core.Ticker, SmartGraph.Nodes">
      <n:Ticker random="true" minValue="490.0" maxValue="510.0"/>
    </e:obj>
  </e:node>
  <e:node name="SmallRandomValue">
    <e:inputs>
      <e:input name="Ticker" ref="ShortTicker" />
    </e:inputs>
    <e:obj type="SmartGraph.Nodes.Core.RandomValue, SmartGraph.Nodes">
      <n:RandomValue minValue="0.1" maxValue="0.2" />
    </e:obj>
  </e:node>
  <e:node name="BigRandomValue">
    <e:inputs>
      <e:input name="Ticker" ref="LongTicker" />
    </e:inputs>
    <e:obj type="SmartGraph.Nodes.Core.RandomValue, SmartGraph.Nodes">
      <n:RandomValue minValue="0.5" maxValue="1.0" />
    </e:obj>
  </e:node>
  <e:node name="SimulatedTask">
    <e:inputs>
      <e:input name="SmallValue" ref="SmallRandomValue" />
      <e:input name="BigValue" ref="BigRandomValue" />
    </e:inputs>
    <e:obj type="SmartGraph.Nodes.Core.RandomSleeper, SmartGraph.Nodes">
      <n:RandomSleeper duration="500" />
    </e:obj>
  </e:node>
</e:engine>
