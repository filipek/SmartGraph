<?xml version="1.0"?>
<xs:schema targetNamespace="urn:smartgraph:engine" xmlns:tns="urn:smartgraph:engine" xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" id="smartgraph.schema">
<!--
// 
// Copyright (c) 2015 Filip Fodemski
// 
// Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files
// (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge,
// publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so,
// subject to the following conditions:
// 
// The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR
// ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH
// THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE
//
-->
<!--
   
   cmd>xsd /c /n:SmartGraph.Engine.Xml.Schema EngineXml.xsd
   
-->
	<!-- object - anything with a type attribute for instantiation -->
	<xs:complexType name="CObject" mixed="false">
		<xs:sequence>
			<xs:any namespace="##any" minOccurs="0" maxOccurs="1"/>
		</xs:sequence>
		<xs:attribute name="type" type="xs:string" use="required"/>
	</xs:complexType>
	<!-- node base -->
	<xs:complexType name="CNodeBase" abstract="true">
		<xs:attribute name="name" type="xs:QName" use="required"/>
	</xs:complexType>
  <!-- node input -->
  <xs:complexType name="CNodeInput">
    <xs:attribute name="name" type="xs:QName" use="required"/>
    <xs:attribute name="ref" type="xs:QName" use="required"/>
  </xs:complexType>
  <!-- node inputs -->
  <xs:complexType name="CNodeInputs">
    <xs:sequence>
      <xs:element name="input" type="tns:CNodeInput" minOccurs="0" maxOccurs="unbounded" />
    </xs:sequence>
  </xs:complexType>
  <!-- node -->
	<xs:complexType name="CNode"> 
		<xs:complexContent>
			<xs:extension base="tns:CNodeBase">
				<xs:all>
          <xs:element name="inputs" type="tns:CNodeInputs" minOccurs="0" maxOccurs="1">
            <xs:unique name="inputName">
              <xs:annotation>
                <xs:documentation>Input uniqueness constraint: inputs are unique within node</xs:documentation>
              </xs:annotation>
              <xs:selector xpath="tns:input"/>
              <xs:field xpath="@name"/>
            </xs:unique>
            <xs:key name="inputKey">
              <xs:annotation>
                <xs:documentation>Input key constraint: inputs are key'd on their name</xs:documentation>
              </xs:annotation>
              <xs:selector xpath="tns:input"/>
              <xs:field xpath="@name"/>
            </xs:key>
          </xs:element>
					<xs:element name="obj" type="tns:CObject" />
				</xs:all>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!-- engine -->
	<xs:complexType name="CEngine">
		<xs:sequence>
      <xs:element name="node" type="tns:CNode" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
		<xs:attribute name="name" type="xs:QName" use="required"/>
	</xs:complexType>
	<!-- root elements -->
  <xs:element name="engine" type="tns:CEngine">
    <xs:unique name="nodeName">
      <xs:annotation>
        <xs:documentation>Node uniqueness constraint: nodes are unique within engine</xs:documentation>
      </xs:annotation>
      <xs:selector xpath="tns:node"/>
      <xs:field xpath="@name"/>
    </xs:unique>
    <xs:key name="nodeKey">
      <xs:annotation>
        <xs:documentation>Node key constraint: nodes are key'd on their name</xs:documentation>
      </xs:annotation>
      <xs:selector xpath="tns:node"/>
      <xs:field xpath="@name"/>
    </xs:key>
    <xs:keyref name="inputNode" refer="tns:nodeKey">
      <xs:annotation>
        <xs:documentation>Node input referential constraint: a node input must refer to a node</xs:documentation>
      </xs:annotation>
      <xs:selector xpath=".//tns:input"/>
      <xs:field xpath="@ref"/>
    </xs:keyref>
  </xs:element>
</xs:schema>
